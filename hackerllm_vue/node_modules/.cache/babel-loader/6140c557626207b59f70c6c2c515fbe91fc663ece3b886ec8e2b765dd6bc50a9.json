{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"barChart\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"600px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512);\n}","map":{"version":3,"names":["ref","style","_createElementBlock","_hoisted_1"],"sources":["/root/hackerllm_rag/hackerllm_vue/src/components/BarChart.vue"],"sourcesContent":["<template>\n  <div ref=\"barChart\" style=\"width: 100%; height: 600px;\"></div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  name: 'BarChart',\n  props: {\n    categories: {\n      type: Array,\n      required: true\n    },\n    data: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String,\n    },\n    value: {\n      type: String,\n      default: \"Mean Value\",\n    },\n    xAxisLabel: {\n      type: String,\n    },\n    yAxisLabel: {\n      type: String,\n    }\n  },\n  mounted() {\n    this.drawChart();\n  },\n  methods: {\n    drawChart() {\n      var myChart = echarts.init(this.$refs.barChart);\n\n      var option = {\n        title: {\n          text: this.title\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: this.categories,\n          axisLabel: {\n            interval: 0,\n            rotate: 45, // 增加旋转角度\n            margin: 10, // 增加标签与轴线的间距\n            textStyle: {\n              fontSize: 15, // 调整字体大小\n              color: \"rgb(156, 147, 147)\",\n            }\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)' // 设置背景线条的颜色\n            }\n          }\n        },\n        yAxis: {\n          type: 'value',\n          name: this.yAxisLabel,\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.1)' // 设置背景线条的颜色\n            }\n          }\n        },\n        series: [{\n          name: this.value,\n          type: 'bar',\n          data: this.data,\n          itemStyle: {\n            color: '#b1ed4a'\n          },\n          label: {\n            show: true,\n            position: 'top',\n            color: 'rgb(156, 147, 147)'\n          }\n        }]\n      };\n\n      myChart.setOption(option);\n    }\n  },\n  watch: {\n    categories: 'drawChart',\n    data: 'drawChart'\n  }\n};\n</script>\n\n<style scoped>\n</style>"],"mappings":";;EACOA,GAAG,EAAC,UAAU;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;uBAApBC,mBAAA,CAA8D,OAA9DC,UAA8D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}