{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"spacer\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"articleTitle\"\n}, \"Data Analysis\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"articleSubTitle\"\n}, \"What we have got\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"10px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, \" This part analyzes the performance and strategies of the top 800 hackers based on data from machine usage, challenge completion, and sherlock completion. The data was filtered to exclude records with below-average completion rates. Descriptive statistics and principal component analysis (PCA) were used to identify key technologies and challenges. It recommends focusing on technologies like Reconnaissance and Password Cracking and prioritizing challenges such as Web, Crypto, and Reversing. It also highlights the importance of Linux and Windows knowledge due to their high attack rates. Correlation and clustering analyses suggest prioritizing related challenge and sherlock types to maximize learning efficiency. A moderate positive correlation between individual and team rankings indicates that better individual performance aligns with higher team success. \", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Machine Attack Part\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, [/*#__PURE__*/_createElementVNode(\"br\")], -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, [/*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"Analysis\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" Considering the total frequency (count) of each technique's appearance among the top 800 individuals and the average completion number (mean), a principal component analysis (PCA) was conducted based on count and mean. \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" The principal component is derived as 0.707count + 0.707mean, with a cumulative contribution rate reaching 0.91.\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" The visualization results sorted in descending order by the principal component are shown in the chart. \")], -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, [/*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" Conclusion\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" The top 7 techniques are recommended for learning:\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createElementVNode(\"ol\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Reconnaissance\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Password Reuse\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Password Cracking\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Injections\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Software & OS Exploitation\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Common Applications\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Web Site Structure Discovery\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Security Tools\")])], -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Challenge Part\", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, [/*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" Conclusion based on the average completion numbers: \"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"The recommended order for completing challenges is Web, Crypto, Reversing, Misc, Forensics, Pwn, Hardware, Mobile, GamePwn, OSINT, Blockchain, and AI - ML. \")], -1 /* HOISTED */);\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Sherlock Part\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, [/*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"Conclusion based on the average completion numbers:\"), /*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\" The recommended order for completing sherlocks is DFIR, SOC, Malware Analysis, Campaign, Cloud, and Threat Intelligence. \")], -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Target Operating System Part\", -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, [/*#__PURE__*/_createElementVNode(\"br\"), /*#__PURE__*/_createTextVNode(\"Conclusion: The top 800 hackers typically target Linux and Windows systems. It is recommended to study knowledge related to Linux and Windows systems. The average number of attacks for each system is as follows: \"), /*#__PURE__*/_createElementVNode(\"ol\", null, [/*#__PURE__*/_createElementVNode(\"li\", null, \"Linux: 64.11\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Windows: 24.38\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Other: 0.78\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"FreeBSD: 0.51\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"OpenBSD: 0.49\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Android: 0.32\"), /*#__PURE__*/_createElementVNode(\"li\", null, \"Solaris: 0.16\")])], -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_22 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Challenge Correlation Analysis\", -1 /* HOISTED */);\nconst _hoisted_23 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, \"The challenge types Reversing, Crypto, Pwn, Web, Misc, Forensics, Mobile, Hardware, and GamePwn exhibit a strong correlation. These challenges likely assess similar abilities and require similar skills and knowledge, meaning that completing one of these challenges can aid in completing the others. The challenge type OSINT shows a weak correlation with other challenges. This type may involve a completely different field or skill set, so completing OSINT provides limited assistance in completing other challenges. Conclusion: It is advisable to prioritize challenges with strong correlations: Web, Crypto, Reversing, Misc, Forensics, Pwn, Hardware, Mobile, GamePwn. \", -1 /* HOISTED */);\nconst _hoisted_24 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Sherlock Correlation Analysis\", -1 /* HOISTED */);\nconst _hoisted_26 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, \"The sherlock types DFIR, Cloud, Malware Analysis, Threat Intelligence, and Campaign exhibit a strong correlation. These sherlocks likely assess similar abilities and require similar skills and knowledge, meaning that completing one of these sherlocks can aid in completing the others. The sherlock type SOC shows a weak correlation with other sherlocks. This type may involve a completely different field or skill set, so completing SOC provides limited assistance in completing other sherlocks. Conclusion: It is advisable to prioritize sherlocks with strong correlations: DFIR, Malware Analysis, Campaign, Cloud, and Threat Intelligence.\", -1 /* HOISTED */);\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"height\": \"100px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"second-level-title\"\n}, \"Rankings Correlation Analysis\", -1 /* HOISTED */);\nconst _hoisted_29 = /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"article\"\n}, \"The correlation coefficient between individual ranking and team ranking is 0.57, indicating a moderate positive correlation between individual ranking and team ranking.\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_BarChart = _resolveComponent(\"BarChart\");\n  const _component_RadarChart = _resolveComponent(\"RadarChart\");\n  const _component_ConfusionMatrix = _resolveComponent(\"ConfusionMatrix\");\n  const _component_ScatterChart = _resolveComponent(\"ScatterChart\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  return _openBlock(), _createBlock(_component_v_main, {\n    style: {\n      \"margin-top\": \"0\",\n      \"margin-bottom\": \"0\",\n      \"padding-top\": \"0\",\n      \"padding-bottom\": \"0\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_hoisted_1, _createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_2, _hoisted_3, _hoisted_4, _createVNode(_component_v_divider), _createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createVNode(_component_v_col, {\n            cols: \"12\",\n            md: \"4\",\n            offset: \"10\"\n          }, {\n            default: _withCtx(() => [_hoisted_5]),\n            _: 1 /* STABLE */\n          }), _createVNode(_component_v_col, {\n            cols: \"11\"\n          }, {\n            default: _withCtx(() => [_hoisted_6]),\n            _: 1 /* STABLE */\n          })]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_7]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_8]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"6\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BarChart, {\n          categories: $data.MachineBarCategories,\n          data: $data.MachineBarChartData,\n          title: $data.MachineAttackPaths\n        }, null, 8 /* PROPS */, [\"categories\", \"data\", \"title\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"5\"\n      }, {\n        default: _withCtx(() => [_hoisted_9]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"6\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BarChart, {\n          categories: $data.MachineMeanBarCategories,\n          data: $data.MachineMeanBarChartData,\n          title: $data.MachineAttackPaths\n        }, null, 8 /* PROPS */, [\"categories\", \"data\", \"title\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"4\"\n      }, {\n        default: _withCtx(() => [_hoisted_10]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"6\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_RadarChart, {\n          indicator: $data.MachineRadarIndicator,\n          data: $data.MachineRadarData\n        }, null, 8 /* PROPS */, [\"indicator\", \"data\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"4\"\n      }, {\n        default: _withCtx(() => [_hoisted_11]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_12]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_13]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"5\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BarChart, {\n          categories: $data.ChallengeBarCategories,\n          data: $data.ChallengeBarChartData,\n          title: $data.ChallengeCategories\n        }, null, 8 /* PROPS */, [\"categories\", \"data\", \"title\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"5\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_RadarChart, {\n          indicator: $data.ChallengeRadarIndicator,\n          data: $data.ChallengeRadarData\n        }, null, 8 /* PROPS */, [\"indicator\", \"data\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"10\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_14]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_15]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_16]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"5\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BarChart, {\n          categories: $data.SherlockMeanBarCategories,\n          data: $data.SherlockMeanBarChartData,\n          title: $data.SherlockCategories\n        }, null, 8 /* PROPS */, [\"categories\", \"data\", \"title\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"5\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_RadarChart, {\n          indicator: $data.SherlockRadarIndicator,\n          data: $data.SherlockRadarData\n        }, null, 8 /* PROPS */, [\"indicator\", \"data\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"10\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_17]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_18]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_19]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"5\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_BarChart, {\n          categories: $data.SystemBarCategories,\n          data: $data.SystemBarChartData,\n          title: $data.SystemCategories\n        }, null, 8 /* PROPS */, [\"categories\", \"data\", \"title\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_v_col, {\n        cols: \"5\"\n      }, {\n        default: _withCtx(() => [_hoisted_20]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_21]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_22]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_ConfusionMatrix, {\n          data: $data.ChallengeMatrixData,\n          categories: $data.ChallengeMatrixCategories\n        }, null, 8 /* PROPS */, [\"data\", \"categories\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"10\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_23]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_24]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_25]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_ConfusionMatrix, {\n          data: $data.SherlockMatrixData,\n          categories: $data.SherlockMatrixCategories\n        }, null, 8 /* PROPS */, [\"data\", \"categories\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"10\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_26]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_hoisted_27]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_28]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, null, {\n        default: _withCtx(() => [_createVNode(_component_ScatterChart, {\n          data: $data.RankScatterData,\n          xAxisLabel: \"Ranking\",\n          yAxisLabel: \"Team Ranking\"\n        }, null, 8 /* PROPS */, [\"data\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_v_row, null, {\n      default: _withCtx(() => [_createVNode(_component_v_col, {\n        cols: \"10\",\n        offset: \"1\"\n      }, {\n        default: _withCtx(() => [_hoisted_29]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createElementVNode","class","style","_createTextVNode","_createBlock","_component_v_main","default","_withCtx","_createVNode","_component_v_row","_hoisted_1","_component_v_col","_hoisted_2","_hoisted_3","_hoisted_4","_component_v_divider","cols","md","offset","_hoisted_5","_","_hoisted_6","_hoisted_7","_hoisted_8","_component_BarChart","categories","$data","MachineBarCategories","data","MachineBarChartData","title","MachineAttackPaths","_hoisted_9","MachineMeanBarCategories","MachineMeanBarChartData","_hoisted_10","_component_RadarChart","indicator","MachineRadarIndicator","MachineRadarData","_hoisted_11","_hoisted_12","_hoisted_13","ChallengeBarCategories","ChallengeBarChartData","ChallengeCategories","ChallengeRadarIndicator","ChallengeRadarData","_hoisted_14","_hoisted_15","_hoisted_16","SherlockMeanBarCategories","SherlockMeanBarChartData","SherlockCategories","SherlockRadarIndicator","SherlockRadarData","_hoisted_17","_hoisted_18","_hoisted_19","SystemBarCategories","SystemBarChartData","SystemCategories","_hoisted_20","_hoisted_21","_hoisted_22","_component_ConfusionMatrix","ChallengeMatrixData","ChallengeMatrixCategories","_hoisted_23","_hoisted_24","_hoisted_25","SherlockMatrixData","SherlockMatrixCategories","_hoisted_26","_hoisted_27","_hoisted_28","_component_ScatterChart","RankScatterData","xAxisLabel","yAxisLabel","_hoisted_29"],"sources":["/root/hackerllm_rag/hackerllm_vue/src/components/GraphDisplayArea.vue"],"sourcesContent":["<template>\n    <v-main style=\"margin-top: 0; margin-bottom: 0; padding-top: 0; padding-bottom: 0;\">\n        <v-row>\n          <div class=\"spacer\"></div>\n          <v-col>\n              <span class=\"articleTitle\">Data Analysis</span><br>\n              <span class=\"articleSubTitle\">What we have got</span>\n              <v-divider></v-divider>\n                  <v-row>\n                    <v-col cols=\"12\" md=\"4\" offset=\"10\">\n                        <div style=\"height: 10px;\"></div>\n                    </v-col>\n                  <v-col cols=\"11\">\n                  <p class=\"article\">\n                    This part analyzes the performance and strategies of the top 800 hackers based on data from machine usage, challenge completion, and sherlock completion. The data was filtered to exclude records with below-average completion rates. Descriptive statistics and principal component analysis (PCA) were used to identify key technologies and challenges. It recommends focusing on technologies like Reconnaissance and Password Cracking and prioritizing challenges such as Web, Crypto, and Reversing. It also highlights the importance of Linux and Windows knowledge due to their high attack rates. Correlation and clustering analyses suggest prioritizing related challenge and sherlock types to maximize learning efficiency. A moderate positive correlation between individual and team rankings indicates that better individual performance aligns with higher team success.\n                  </p>\n                </v-col>\n                </v-row>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Machine Attack Part</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"6\" offset=\"1\">\n            <BarChart :categories=\"MachineBarCategories\" :data=\"MachineBarChartData\" :title=\"MachineAttackPaths\" />\n          </v-col>\n          <v-col cols=\"5\">\n            <p class=\"article\">\n              <br>\n\n            </p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"6\" offset=\"1\">\n            <BarChart :categories=\"MachineMeanBarCategories\" :data=\"MachineMeanBarChartData\" :title=\"MachineAttackPaths\" />\n          </v-col>\n          <v-col cols=\"4\">\n            <p class=\"article\">\n                <br>Analysis<br>\nConsidering the total frequency (count) of each technique's appearance among the top 800 individuals and the average completion number (mean), a principal component analysis (PCA) was conducted based on count and mean. <br>\nThe principal component is derived as 0.707count + 0.707mean, with a cumulative contribution rate reaching 0.91.<br>\nThe visualization results sorted in descending order by the principal component are shown in the chart.\n            </p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"6\" offset=\"1\">\n            <RadarChart :indicator=\"MachineRadarIndicator\" :data=\"MachineRadarData\" />\n          </v-col>\n          <v-col cols=\"4\">\n            <p class=\"article\">\n                <br>\n                Conclusion<br>\n    The top 7 techniques are recommended for learning:<br>\n    <ol>\n        <li>Reconnaissance</li>\n        <li>Password Reuse</li>\n        <li>Password Cracking</li>\n        <li>Injections</li>\n        <li>Software & OS Exploitation</li>\n        <li>Common Applications</li>\n        <li>Web Site Structure Discovery</li>\n        <li>Security Tools</li>\n    </ol>\n            </p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Challenge Part</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"5\" offset=\"1\">\n            <BarChart :categories=\"ChallengeBarCategories\" :data=\"ChallengeBarChartData\" :title=\"ChallengeCategories\"/>\n          </v-col>\n          <v-col cols=\"5\">\n            <RadarChart :indicator=\"ChallengeRadarIndicator\" :data=\"ChallengeRadarData\" />\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"10\" offset=\"1\">\n            <p class=\"article\">\n              <br>\n              Conclusion based on the average completion numbers: <br>The recommended order for completing challenges is Web, Crypto, Reversing, Misc, Forensics, Pwn, Hardware, Mobile, GamePwn, OSINT, Blockchain, and AI - ML.\n            </p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Sherlock Part</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"5\" offset=\"1\">\n            <BarChart :categories=\"SherlockMeanBarCategories\" :data=\"SherlockMeanBarChartData\" :title=\"SherlockCategories\"/>\n          </v-col>\n          <v-col cols=\"5\">\n            <RadarChart :indicator=\"SherlockRadarIndicator\" :data=\"SherlockRadarData\" />\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"10\" offset=\"1\">\n            <p class=\"article\">\n              <br>Conclusion based on the average completion numbers:<br> The recommended order for completing sherlocks is DFIR, SOC, Malware Analysis, Campaign, Cloud, and Threat Intelligence.\n            </p>\n          </v-col>\n\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Target Operating System Part</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"5\" offset=\"1\">\n            <BarChart :categories=\"SystemBarCategories\" :data=\"SystemBarChartData\" :title=\"SystemCategories\"/>\n          </v-col>\n          <v-col cols=\"5\">\n            <p class=\"article\">\n              <br>Conclusion: The top 800 hackers typically target Linux and Windows systems. It is recommended to study knowledge related to Linux and Windows systems.\n\nThe average number of attacks for each system is as follows:\n                <ol>\n                  <li>Linux: 64.11</li>\n                  <li>Windows: 24.38</li>\n                  <li>Other: 0.78</li>\n                  <li>FreeBSD: 0.51</li>\n                  <li>OpenBSD: 0.49</li>\n                  <li>Android: 0.32</li>\n                  <li>Solaris: 0.16</li>\n                </ol>\n\n            </p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Challenge Correlation Analysis</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <ConfusionMatrix :data=\"ChallengeMatrixData\" :categories=\"ChallengeMatrixCategories\" />\n          </v-col>          \n        </v-row>\n        <v-row>\n          <v-col cols=\"10\" offset=\"1\">\n            <p class=\"article\">The challenge types Reversing, Crypto, Pwn, Web, Misc, Forensics, Mobile, Hardware, and GamePwn exhibit a strong correlation. These challenges likely assess similar abilities and require similar skills and knowledge, meaning that completing one of these challenges can aid in completing the others.\n\nThe challenge type OSINT shows a weak correlation with other challenges. This type may involve a completely different field or skill set, so completing OSINT provides limited assistance in completing other challenges.\n\nConclusion: It is advisable to prioritize challenges with strong correlations: Web, Crypto, Reversing, Misc, Forensics, Pwn, Hardware, Mobile, GamePwn.\n\n\n\n\n\n\n</p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Sherlock Correlation Analysis</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <ConfusionMatrix :data=\"SherlockMatrixData\" :categories=\"SherlockMatrixCategories\" />\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col cols=\"10\" offset=\"1\">\n            <p class=\"article\">The sherlock types DFIR, Cloud, Malware Analysis, Threat Intelligence, and Campaign exhibit a strong correlation. These sherlocks likely assess similar abilities and require similar skills and knowledge, meaning that completing one of these sherlocks can aid in completing the others.\n\nThe sherlock type SOC shows a weak correlation with other sherlocks. This type may involve a completely different field or skill set, so completing SOC provides limited assistance in completing other sherlocks.\n\nConclusion: It is advisable to prioritize sherlocks with strong correlations: DFIR, Malware Analysis, Campaign, Cloud, and Threat Intelligence.</p>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n          <div style=\"height: 100px;\"></div>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col offset=\"1\">\n              <span class=\"second-level-title\">Rankings Correlation Analysis</span>\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col>\n            <ScatterChart :data=\"RankScatterData\" xAxisLabel=\"Ranking\" yAxisLabel=\"Team Ranking\" />\n          </v-col>\n        </v-row>\n        <v-row>\n          <v-col  cols=\"10\" offset=\"1\">\n            <p class=\"article\">The correlation coefficient between individual ranking and team ranking is 0.57, indicating a moderate positive correlation between individual ranking and team ranking.</p>\n          </v-col>\n        </v-row>\n    </v-main>\n</template>\n\n\n\n<script>\nimport BarChart from './BarChart.vue';\nimport ConfusionMatrix from './ConfusionMatrix.vue';\nimport RadarChart from './RadarChart.vue'\nimport ScatterChart from './ScatterChart.vue'\nexport default {\n  components: {\n    ConfusionMatrix,\n    BarChart,\n    RadarChart,\n    ScatterChart,\n  },\n  data() {\n    return {\n        //Challenge Part\n        ChallengeMatrixData: [\n        [1, 0.86, 0.84, 0.73, 0.83, 0.84, 0.8, 0.47, 0.84, 0.79, 0.64, 0.6],\n        [0.86, 1, 0.83, 0.72, 0.85, 0.79, 0.78, 0.47, 0.84, 0.79, 0.64, 0.63],\n        [0.84, 0.83, 1, 0.67, 0.73, 0.7, 0.69, 0.43, 0.74, 0.7, 0.57, 0.6],\n        [0.73, 0.72, 0.67, 1, 0.74, 0.73, 0.72, 0.47, 0.67, 0.61, 0.53, 0.52],\n        [0.83, 0.85, 0.73, 0.74, 1, 0.78, 0.8, 0.63, 0.79, 0.77, 0.55, 0.55],\n        [0.84, 0.79, 0.7, 0.73, 0.78, 1, 0.74, 0.49, 0.74, 0.66, 0.55, 0.53],\n        [0.8, 0.78, 0.69, 0.72, 0.8, 0.74, 1, 0.49, 0.79, 0.78, 0.6, 0.54],\n        [0.47, 0.47, 0.43, 0.47, 0.63, 0.49, 0.49, 1, 0.43, 0.41, 0.23, 0.24],\n        [0.84, 0.84, 0.74, 0.67, 0.79, 0.74, 0.79, 0.43, 1, 0.82, 0.69, 0.59],\n        [0.79, 0.79, 0.7, 0.61, 0.77, 0.66, 0.78, 0.41, 0.82, 1, 0.67, 0.59],\n        [0.64, 0.64, 0.57, 0.53, 0.55, 0.55, 0.6, 0.23, 0.69, 0.67, 1, 0.57],\n        [0.6, 0.63, 0.6, 0.52, 0.55, 0.53, 0.54, 0.24, 0.59, 0.59, 0.57, 1]\n      ],\n      ChallengeMatrixCategories: ['Reversing', 'Crypto', 'Pwn', 'Web', 'Misc', 'Forensics', 'Mobile', 'OSINT', 'Hardware', 'GamePwn', 'Blockchain', 'AI - ML'],\n      \n      //Sherlock混淆矩阵数据\n      SherlockMatrixData: [\n        [1, 0.81, 0.83, 0.46, 0.7, 0.67], \n        [0.81, 1, 0.79, 0.35, 0.69, 0.66],\n        [0.83, 0.79, 1, 0.42, 0.69, 0.58],\n        [0.46, 0.35, 0.42, 1, 0.33, 0.32],\n        [0.7, 0.69, 0.69, 0.33, 1, 0.54],\n        [0.67, 0.66, 0.58, 0.32, 0.54, 1]\n      ],\n      SherlockMatrixCategories: ['DFIR', 'Cloud', 'Malware Analysis', 'SOC', 'Threat Intelligence', 'Campaign'],\n      \n      MachineAttackPaths: \"Machine Attack Paths\",\n      ChallengeCategories: \"Challenge Categories\",\n      SherlockCategories: \"Sherlock Categories\",\n      SystemCategories: \"System Categories\",\n\n      //machine板块柱状图\n      MachineBarCategories: ['Reconnaissance', 'Password Reuse', 'Password Cracking', 'Injections', 'Software & OS exploitation', 'Common Applications', 'Web Site Structure Discovery', 'Security Tools', 'Source Code Analysis', 'SUDO Exploitation', 'Authentication', 'Databases', 'Custom Applications', 'Configuration and Authorization', 'Protocols', 'Broken Authentication and Authorization', 'Fuzzing', 'User Enumeration', 'Active Directory', 'Reverse Engineering'],\n      MachineBarChartData: [778.37, 759.59, 748.97, 745.81, 707.69, 700.23, 672.15, 422.61, 374.41, 327.21, 323.61, 297.85, 220.55, 142.28, 95.58, 89.88, 85.97, 79.15, 47.87, 36.32],\n\n      //machine mean板块柱状图\n      MachineMeanBarCategories: ['Reconnaissance', 'Software & OS exploitation', 'Injections', 'Security Tools', 'Password Reuse', 'Password Cracking', 'Web Site Structure Discovery', 'Common Applications'],\n      MachineMeanBarChartData: [48.86, 34.91, 30.81, 30.71, 27.37, 26.32, 23.68, 22.39],\n\n      //chanllenge模块柱状图\n      ChallengeBarCategories: ['Web', 'Crypto', 'Reversing', 'Misc', 'Forensics', 'Pwn', 'Hardware', 'Mobile', 'GamePwn', 'OSINT', 'Blockchain', 'AI - ML'],\n      ChallengeBarChartData: [15.26, 8.22, 7.59, 6.50, 6.45, 6.41, 4.20, 2.78, 1.76, 1.40, 1.05, 0.17],\n      \n      //sherlock mean板块柱状图\n      SherlockMeanBarCategories: ['DFIR', 'SOC', 'Malware Analysis', 'Campaign', 'Cloud', 'Threat Intelligence'],\n      SherlockMeanBarChartData: [3.65, 0.82, 0.49, 0.29, 0.16, 0.11],\n      \n      //system 板块柱状图\n      SystemBarCategories: ['Linux', 'Windows', 'Other', 'FreeBSD', 'OpenBSD', 'Android', 'Solaris'],\n      SystemBarChartData: [64.11, 24.38, 0.78, 0.51, 0.49, 0.32, 0.16],\n\n      //machine板块雷达图\n      MachineRadarIndicator: [\n        { name: 'Software & OS exploitation', max: 35 },\n        { name: 'Security Tools', max: 35 },\n        { name: 'Common Applications', max: 35 },\n        { name: 'Web Site Structure Discovery', max: 35 },\n        { name: 'Injections', max: 35 },\n        { name: 'Password Cracking', max: 35 },\n        { name: 'Password Reuse', max: 35 },\n        { name: 'Reconnaissance', max: 35 }\n      ],\n      MachineRadarData: [24.1, 27.5, 30.3, 21.5, 22.7, 22.7, 23.8, 24.1],\n\n      //chanllenge模块雷达图\n      ChallengeRadarIndicator: [\n        { name: 'Web', max: 30 },\n        { name: 'Misc', max: 30 },\n        { name: 'GamePwn', max: 30 },\n        { name: 'Mobile', max: 30 },\n        { name: 'OSINT', max: 30 },\n        { name: 'AI - ML', max: 30 },\n        { name: 'Pwn', max: 30 },\n        { name: 'Blockchain', max: 30 },\n        { name: 'Crypto', max: 30 },\n        { name: 'Forensics', max: 30 },\n        { name: 'Reversing', max: 30 },\n        { name: 'Hardware', max: 30 }\n      ],\n      ChallengeRadarData: [16.0, 13.2, 10.0, 16.4, 28.0, 2.9, 6.3, 8.0, 9.8, 10.7, 12.3, 10.0],\n      \n      //Sherlock模块雷达图\n      SherlockRadarIndicator: [\n        { name: 'Threat Intelligence', max: 50 },\n        { name: 'DFIR', max: 50 },\n        { name: 'SOC', max: 50 },\n        { name: 'Campaign', max: 50 },\n        { name: 'Cloud', max: 50 },\n        { name: 'Malware Analysis', max: 50 }\n      ],\n      SherlockRadarData: [12.5, 11.3, 41.2, 5.9, 7.9, 9.6],\n      \n      //排名相关性散点图\n      RankScatterData: [[1.0, 1.0], [4.0, 4.0], [6.0, 5.0], [6.0, 4.0], [7.0, 4.0], [10.0, 3.0], [11.0, 2.0], [12.0, 8.0], [15.0, 2.0], [18.0, 30.0], [16.0, 9.0], [21.0, 4.0], [22.0, 12.0], [24.0, 10.0], [25.0, 15.0], [28.0, 1.0], [30.0, 8.0], [32.0, 11.0], [770.0, 3.0], [35.0, 11.0], [38.0, 19.0], [39.0, 4.0], [41.0, 1.0], [44.0, 13.0], [47.0, 2.0], [48.0, 24.0], [51.0, 10.0], [426.0, 31.0], [53.0, 25.0], [54.0, 28.0], [55.0, 2.0], [56.0, 17.0], [57.0, 29.0], [447.0, 176.0], [62.0, 26.0], [66.0, 4.0], [65.0, 5.0], [70.0, 4.0], [555.0, 31.0], [73.0, 26.0], [734.0, 302.0], [76.0, 36.0], [75.0, 38.0], [78.0, 23.0], [778.0, 338.0], [797.0, 354.0], [525.0, 32.0], [80.0, 39.0], [81.0, 25.0], [85.0, 3.0], [712.0, 235.0], [87.0, 11.0], [93.0, 41.0], [94.0, 42.0], [496.0, 21.0], [98.0, 12.0], [99.0, 9.0], [102.0, 31.0], [123.0, 32.0], [104.0, 48.0], [105.0, 9.0], [107.0, 12.0], [491.0, 43.0], [117.0, 11.0], [120.0, 61.0], [121.0, 2.0], [124.0, 30.0], [126.0, 63.0], [127.0, 2.0], [117.0, 37.0], [125.0, 54.0], [131.0, 41.0], [118.0, 56.0], [133.0, 47.0], [136.0, 17.0], [154.0, 34.0], [246.0, 23.0], [145.0, 71.0], [698.0, 18.0], [207.0, 93.0], [153.0, 13.0], [151.0, 75.0], [216.0, 86.0], [156.0, 47.0], [159.0, 77.0], [161.0, 79.0], [178.0, 87.0], [162.0, 76.0], [163.0, 74.0], [165.0, 49.0], [158.0, 70.0], [168.0, 13.0], [169.0, 80.0], [171.0, 69.0], [171.0, 34.0], [352.0, 88.0], [173.0, 83.0], [174.0, 19.0], [468.0, 7.0], [231.0, 9.0], [181.0, 82.0], [183.0, 89.0], [502.0, 50.0], [189.0, 44.0], [194.0, 6.0], [695.0, 62.0], [196.0, 85.0], [198.0, 9.0], [220.0, 98.0], [760.0, 25.0], [201.0, 90.0], [203.0, 52.0], [291.0, 23.0], [204.0, 87.0], [299.0, 32.0], [758.0, 11.0], [416.0, 151.0], [534.0, 9.0], [209.0, 94.0], [465.0, 184.0], [266.0, 81.0], [518.0, 199.0], [221.0, 99.0], [394.0, 127.0], [225.0, 40.0], [228.0, 78.0], [229.0, 100.0], [232.0, 44.0], [760.0, 263.0], [443.0, 168.0], [263.0, 18.0], [308.0, 12.0], [275.0, 101.0], [241.0, 44.0], [242.0, 82.0], [243.0, 25.0], [244.0, 30.0], [281.0, 26.0], [253.0, 92.0], [329.0, 72.0], [258.0, 18.0], [324.0, 95.0], [260.0, 106.0], [370.0, 48.0], [262.0, 57.0], [264.0, 19.0], [271.0, 19.0], [272.0, 13.0], [615.0, 212.0], [676.0, 211.0], [273.0, 12.0], [242.0, 12.0], [276.0, 26.0], [276.0, 96.0], [279.0, 118.0], [427.0, 11.0], [517.0, 8.0], [282.0, 119.0], [283.0, 104.0], [264.0, 48.0], [285.0, 25.0], [288.0, 108.0], [359.0, 5.0], [157.0, 9.0], [321.0, 19.0], [331.0, 59.0], [416.0, 8.0], [304.0, 124.0], [307.0, 116.0], [307.0, 13.0], [309.0, 11.0], [309.0, 126.0], [314.0, 128.0], [348.0, 56.0], [316.0, 13.0], [319.0, 137.0], [788.0, 10.0], [177.0, 132.0], [323.0, 35.0], [328.0, 25.0], [329.0, 130.0], [186.0, 125.0], [333.0, 113.0], [334.0, 117.0], [340.0, 60.0], [341.0, 12.0], [456.0, 180.0], [749.0, 111.0], [414.0, 153.0], [473.0, 184.0], [349.0, 33.0], [351.0, 141.0], [355.0, 19.0], [358.0, 135.0], [360.0, 43.0], [732.0, 19.0], [364.0, 91.0], [325.0, 25.0], [562.0, 34.0], [368.0, 147.0], [393.0, 130.0], [372.0, 136.0], [375.0, 13.0], [376.0, 56.0], [377.0, 6.0], [377.0, 46.0], [404.0, 2.0], [353.0, 142.0], [386.0, 40.0], [516.0, 201.0], [389.0, 156.0], [390.0, 31.0], [391.0, 64.0], [510.0, 19.0], [399.0, 20.0], [641.0, 157.0], [401.0, 138.0], [435.0, 172.0], [441.0, 149.0], [476.0, 130.0], [410.0, 9.0], [252.0, 150.0], [648.0, 219.0], [727.0, 297.0], [607.0, 219.0], [496.0, 177.0], [417.0, 2.0], [419.0, 84.0], [544.0, 209.0], [420.0, 145.0], [427.0, 40.0], [736.0, 155.0], [431.0, 18.0], [406.0, 144.0], [432.0, 4.0], [433.0, 78.0], [426.0, 137.0], [436.0, 128.0], [420.0, 18.0], [450.0, 171.0], [452.0, 93.0], [297.0, 178.0], [690.0, 10.0], [718.0, 290.0], [461.0, 139.0], [461.0, 56.0], [500.0, 197.0], [464.0, 155.0], [466.0, 44.0], [469.0, 170.0], [469.0, 33.0], [470.0, 185.0], [475.0, 33.0], [477.0, 95.0], [600.0, 181.0], [480.0, 187.0], [324.0, 140.0], [478.0, 167.0], [604.0, 230.0], [683.0, 34.0], [520.0, 19.0], [484.0, 133.0], [485.0, 157.0], [784.0, 240.0], [489.0, 9.0], [537.0, 62.0], [720.0, 18.0], [517.0, 130.0], [345.0, 32.0], [696.0, 204.0], [623.0, 219.0], [503.0, 37.0], [554.0, 18.0], [504.0, 198.0], [634.0, 50.0], [626.0, 179.0], [506.0, 152.0], [507.0, 50.0], [507.0, 152.0], [509.0, 41.0], [585.0, 213.0], [506.0, 84.0], [737.0, 304.0], [514.0, 111.0], [363.0, 26.0], [516.0, 56.0], [518.0, 11.0], [470.0, 49.0], [691.0, 83.0], [618.0, 10.0], [560.0, 34.0], [524.0, 34.0], [561.0, 129.0], [797.0, 57.0], [418.0, 71.0], [569.0, 215.0], [775.0, 32.0], [537.0, 121.0], [693.0, 278.0], [487.0, 33.0], [603.0, 4.0], [561.0, 130.0], [563.0, 2.0], [544.0, 21.0], [587.0, 226.0], [397.0, 26.0], [549.0, 159.0], [550.0, 202.0], [786.0, 329.0], [550.0, 212.0], [614.0, 13.0], [554.0, 195.0], [782.0, 344.0], [671.0, 264.0], [628.0, 243.0], [591.0, 220.0], [593.0, 40.0], [594.0, 40.0], [560.0, 191.0], [593.0, 171.0], [594.0, 181.0], [557.0, 11.0], [599.0, 225.0], [563.0, 162.0], [771.0, 146.0], [651.0, 127.0], [608.0, 4.0], [600.0, 26.0], [423.0, 218.0], [569.0, 3.0], [643.0, 8.0], [572.0, 222.0], [744.0, 270.0], [573.0, 158.0], [648.0, 254.0], [746.0, 306.0], [439.0, 6.0], [683.0, 244.0], [584.0, 225.0], [716.0, 11.0], [618.0, 131.0], [590.0, 190.0], [777.0, 235.0], [701.0, 282.0], [625.0, 18.0], [596.0, 150.0], [746.0, 186.0], [682.0, 269.0], [744.0, 310.0], [670.0, 254.0], [674.0, 267.0], [603.0, 40.0], [637.0, 62.0], [621.0, 138.0], [516.0, 21.0], [472.0, 40.0], [796.0, 219.0], [608.0, 176.0], [640.0, 12.0], [609.0, 212.0], [780.0, 341.0], [651.0, 182.0], [617.0, 44.0], [775.0, 337.0], [652.0, 214.0], [652.0, 213.0], [621.0, 19.0], [654.0, 34.0], [725.0, 153.0], [745.0, 40.0], [626.0, 243.0], [498.0, 239.0], [630.0, 244.0], [664.0, 260.0], [635.0, 19.0], [657.0, 249.0], [637.0, 88.0], [516.0, 44.0], [583.0, 11.0], [673.0, 241.0], [642.0, 25.0], [698.0, 256.0], [791.0, 351.0], [646.0, 4.0], [527.0, 252.0], [657.0, 259.0], [687.0, 275.0], [783.0, 326.0], [721.0, 56.0], [659.0, 25.0], [720.0, 268.0], [660.0, 258.0], [664.0, 9.0], [694.0, 46.0], [665.0, 18.0], [704.0, 102.0], [708.0, 64.0], [668.0, 21.0], [669.0, 263.0], [720.0, 167.0], [726.0, 226.0], [646.0, 299.0], [670.0, 6.0], [558.0, 21.0], [763.0, 21.0], [672.0, 266.0], [672.0, 3.0], [675.0, 57.0], [675.0, 224.0], [705.0, 21.0], [677.0, 44.0], [570.0, 34.0], [573.0, 31.0], [597.0, 30.0], [714.0, 288.0], [685.0, 44.0], [719.0, 199.0], [746.0, 28.0], [686.0, 21.0], [766.0, 57.0], [689.0, 216.0], [800.0, 360.0], [797.0, 357.0], [775.0, 314.0], [697.0, 59.0], [600.0, 279.0], [781.0, 341.0], [726.0, 86.0], [732.0, 21.0], [701.0, 193.0], [703.0, 164.0], [702.0, 283.0], [796.0, 133.0], [754.0, 268.0], [708.0, 298.0], [738.0, 163.0], [679.0, 269.0], [713.0, 133.0], [743.0, 309.0], [716.0, 288.0], [777.0, 30.0], [765.0, 324.0], [753.0, 21.0], [717.0, 223.0], [743.0, 191.0], [720.0, 283.0], [741.0, 18.0], [774.0, 335.0], [722.0, 18.0], [694.0, 221.0], [727.0, 101.0], [728.0, 131.0], [753.0, 26.0], [755.0, 314.0], [776.0, 338.0], [776.0, 320.0], [566.0, 207.0], [731.0, 176.0], [773.0, 60.0], [767.0, 326.0], [737.0, 279.0], [738.0, 276.0], [738.0, 176.0], [739.0, 6.0], [696.0, 327.0], [742.0, 25.0], [775.0, 337.0], [772.0, 182.0], [744.0, 18.0], [744.0, 293.0], [747.0, 313.0], [749.0, 193.0], [773.0, 212.0], [750.0, 122.0], [750.0, 291.0], [751.0, 315.0], [774.0, 336.0], [777.0, 212.0], [783.0, 341.0], [757.0, 296.0], [755.0, 319.0], [782.0, 47.0], [756.0, 6.0], [791.0, 163.0], [756.0, 320.0], [784.0, 80.0], [689.0, 322.0], [760.0, 324.0], [660.0, 56.0], [695.0, 26.0], [794.0, 356.0], [762.0, 304.0], [763.0, 86.0], [788.0, 13.0], [766.0, 144.0], [735.0, 146.0], [767.0, 46.0], [793.0, 190.0], [770.0, 224.0], [793.0, 296.0], [792.0, 351.0], [774.0, 191.0], [781.0, 3.0], [798.0, 358.0], [777.0, 339.0], [799.0, 33.0], [773.0, 188.0], [780.0, 34.0], [756.0, 320.0], [779.0, 341.0], [798.0, 237.0], [779.0, 335.0], [781.0, 121.0], [780.0, 342.0], [785.0, 3.0], [782.0, 336.0], [783.0, 222.0], [797.0, 269.0], [791.0, 382.0], [785.0, 108.0], [787.0, 349.0], [788.0, 10.0], [736.0, 19.0], [799.0, 8.0], [777.0, 289.0], [793.0, 18.0], [794.0, 335.0], [795.0, 335.0], [797.0, 23.0], [796.0, 18.0], [798.0, 9.0], [799.0, 311.0], [800.0, 342.0], [800.0, 115.0], [757.0, 362.0], [795.0, 269.0], [785.0, 317.0], [785.0, 379.0], [793.0, 311.0], [800.0, 359.0], [781.0, 224.0], [770.0, 368.0], [790.0, 382.0], [795.0, 361.0], [780.0, 376.0]],\n    };\n  }\n};\n</script>\n<style>\n  .article{\n    font-family: Arial, sans-serif;\n    font-size: 1.75em;\n    line-height: 1.5;\n    color: white;\n  }\n  .articleTitle{\n    font-family: Arial, sans-serif;\n    font-size: 5em;\n    font-weight: bold;\n    line-height: 1.5;\n    color: white;\n    text-decoration: underline\n  }\n  .articleSubTitle{\n    font-family: Arial, sans-serif;\n    font-size: 1.75em;\n    line-height: 1.0;\n    color: rgb(156, 147, 147);\n  }\n  .second-level-title{\n    font-family: Arial, sans-serif;\n    font-size: 4em;\n    font-style: italic;\n    line-height: 1.5;\n    color: rgb(200, 186, 186);\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}