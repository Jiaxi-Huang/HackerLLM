{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  ref: \"chart\",\n  style: {\n    \"width\": \"100%\",\n    \"height\": \"600px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512);\n}","map":{"version":3,"names":["ref","style","_createElementBlock","_hoisted_1"],"sources":["/root/hackerllm_rag/hackerllm_vue/src/components/ConfusionMatrix.vue"],"sourcesContent":["<template>\n    <div ref=\"chart\" style=\"width: 100%; height: 600px;\"></div>\n  </template>\n  \n  <script>\n  import * as echarts from 'echarts';\n  \n  export default {\n    name: 'ConfusionMatrix',\n    props: {\n      data: {\n        type: Array,\n        required: true\n      },\n      categories: {\n        type: Array,\n        required: true\n      }\n    },\n    mounted() {\n      this.drawChart();\n    },\n    methods: {\n      drawChart() {\n        var chart = echarts.init(this.$refs.chart);\n  \n        var option = {\n          tooltip: {\n            position: 'top',\n            formatter: function (params) {\n              return `fact: ${params.value[1]}<br>predict: ${params.value[0]}<br>sum: ${params.value[2]}`;\n            }\n          },\n          grid: {\n            left: '10%',\n            right: '10%',\n            top: '10%',\n            bottom: '20%'\n          },\n          xAxis: {\n            type: 'category',\n            data: this.categories,\n            splitArea: {\n              show: true\n            },\n            axisLabel: {\n              rotate: 45,\n              interval: 0\n            }\n          },\n          yAxis: {\n            type: 'category',\n            data: this.categories,\n            splitArea: {\n              show: true\n            }\n          },\n          visualMap: {\n            min: 0,\n            max: 1,\n            calculable: true,\n            orient: 'horizontal',\n            left: 'center',\n            bottom: '5%',\n            inRange: {\n              color: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#e0f3f8', '#ffffbf', '#fee090', '#fdae61', '#f46d43', '#d73027', '#a50026']\n            }\n          },\n          series: [{\n            name: 'Confusion Matrix',\n            type: 'heatmap',\n            data: this.data.map((item, i) => item.map((value, j) => [j, i, value])).flat(),\n            label: {\n              show: true,\n              color: '#000'\n            },\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n  \n        chart.setOption(option);\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  </style>\n  "],"mappings":";;EACSA,GAAG,EAAC,OAAO;EAACC,KAAmC,EAAnC;IAAA;IAAA;EAAA;;;uBAAjBC,mBAAA,CAA2D,OAA3DC,UAA2D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}